name: docker images

on:
  push:
    branches:
      - 'main'
      - 'experimental/gh-actions'
      - 'experimental/some-dependency-tracking'

concurrency:
  group: "${{ github.ref }}"

jobs:
  build-baselayout-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: "Docker Build: base-layout"
        uses: './.github/actions/composite-docker'
        with:
          registry-user: ${{ github.repository_owner }}
          registry-secret: ${{ secrets.GITHUB_TOKEN }}
          image-name: "webdevops/base-layout"
          image-context: "docker/base-layout/latest"
          image-tags: "ghcr.io/cocoastorm/webdevops/base-layout:latest"

  build-toolbox-image:
    needs: build-baselayout-image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavor: ["alpine", "buster"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: "Docker Build Composite: toolbox"
        uses: ./.github/actions/composite-docker
        with:
          registry-user: ${{ github.repository_owner }}
          registry-secret: ${{ secrets.GITHUB_TOKEN }}
          image-name: "webdevops/toolbox"
          image-context: "docker/toolbox/${{ matrix.flavor }}"
          image-tags: "ghcr.io/cocoastorm/webdevops/toolbox:${{ matrix.flavor }}"

  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.generate-matrix.outputs.matrix-base }}
      multi: ${{ steps.generate-matrix.outputs.matrix-multi }}
      dev: ${{ steps.generate-matrix.outputs.matrix-dev }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - run: pip install -r bin/requirements.txt

      - name: Generate Matrix
        id: generate-matrix
        run: python bin/console generate:gh-action-matrix --whitelist='php*/8.*/*' --blacklist='php-official/*/**'
  
  build-base-images:
    needs:
      - generate-matrix
      - build-toolbox-image
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.base) }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Build "${{ matrix.name }}"
        uses: ./.github/actions/composite-docker
        with:
          registry-user: ${{ github.repository_owner }}
          registry-secret: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ matrix.name }}
          image-context: ${{ matrix.context }}
          image-tags: ${{ matrix.tags }}

  build-multi-images:
    needs:
      - generate-matrix
      - build-base-images
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.multi) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build "${{ matrix.name }}"
        uses: ./.github/actions/composite-docker
        with:
          registry-user: ${{ github.repository_owner }}
          registry-secret: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ matrix.name }}
          image-context: ${{ matrix.context }}
          image-tags: ${{ matrix.tags }}

  build-dev-images:
    needs:
      - generate-matrix
      - build-multi-images
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.dev) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build ${{ matrix.name }}
        uses: ./.github/actions/composite-docker
        with:
          registry-user: ${{ github.repository_owner }}
          registry-secret: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ matrix.name }}
          image-context: ${{ matrix.context }}
          image-tags: ${{ matrix.tags }}
