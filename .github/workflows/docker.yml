name: docker images

on:
  push:
    branches:
      - 'main'
      - 'experimental/gh-actions'

concurrency:
  group: "${{ github.ref }}"

jobs:
  build-toolbox-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: "Docker Build Composite: toolbox"
        uses: ./.github/actions/composite-docker
        with:
          registry-user: ${{ github.repository_owner }}
          registry-secret: ${{ secrets.GITHUB_TOKEN }}
          image-name: "webdevops/toolbox"
          image-context: "docker/toolbox/latest"
          image-tags: "ghcr.io/cocoastorm/webdevops/toolbox:latest"

  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.generate-matrix.outputs.matrix-base }}
      multi: ${{ steps.generate-matrix.outputs.matrix-multi }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - run: pip install -r bin/requirements.txt

      - name: Generate Matrix
        id: generate-matrix
        run: python bin/console generate:gh-action-matrix --whitelist='php-*/8.*/*'
  
  build-base-images:
    needs:
      - build-toolbox-image
      - generate-matrix
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.base) }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Docker Build Composite
        uses: ./.github/actions/composite-docker
        with:
          registry-user: ${{ github.repository_owner }}
          registry-secret: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ matrix.name }}
          image-context: ${{ matrix.context }}
          image-tags: ${{ matrix.tags }}

  build-multi-images:
    needs:
      - generate-matrix
      - build-toolbox-image
      - build-base-images
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.multi) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Build Composite
        uses: ./.github/actions/composite-docker
        with:
          registry-user: ${{ github.repository_owner }}
          registry-secret: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ matrix.name }}
          image-context: ${{ matrix.context }}
          image-tags: ${{ matrix.tags }}

